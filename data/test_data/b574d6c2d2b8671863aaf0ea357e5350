{
  "lead": "Apple's smartphone may not attract as much malware as Android, but it is still far from invicible. By Tom Brewster",
  "id": "technology/2014/feb/12/feeling-smug-that-your-iphone-cant-be-hacked-not-so-fast",
  "words": {
    "jailbreak": 2,
    "organise": 1,
    "steal": 5,
    "metadata": 2,
    "jump": 2,
    "incorrectly": 1,
    "reverse": 1,
    "rogue": 2,
    "get": 2,
    "yes": 1,
    "warn": 1,
    "team": 1,
    "lock": 1,
    "trivial": 1,
    "online": 1,
    "handset": 1,
    "photo": 1,
    "partner": 1,
    "connect": 1,
    "scoop": 1,
    "plan": 2,
    "update": 2,
    "trick": 1,
    "mistake": 2,
    "especially": 2,
    "mitigate": 1,
    "fresh": 1,
    "spot": 1,
    "heavily": 1,
    "accord": 1,
    "remotely": 2,
    "detail": 1,
    "user": 14,
    "extract": 1,
    "pretty": 2,
    "publish": 1,
    "initiate": 1,
    "infect": 1,
    "future": 1,
    "email": 4,
    "idea": 2,
    "come": 4,
    "persistently": 1,
    "overwrite": 1,
    "report": 2,
    "read": 1,
    "phone": 3,
    "client": 2,
    "indication": 1,
    "arbitrary": 1,
    "officer": 2,
    "app": 11,
    "equate": 1,
    "handy": 2,
    "invicible": 1,
    "deliver": 1,
    "add": 1,
    "contact": 1,
    "iphone": 8,
    "iphones": 1,
    "common": 2,
    "majority": 1,
    "far": 3,
    "legitimately": 1,
    "good": 2,
    "employ": 1,
    "vulnerability": 6,
    "grail": 1,
    "board": 1,
    "hit": 2,
    "coverage": 1,
    "rely": 2,
    "access": 3,
    "stop": 1,
    "case": 1,
    "compare": 1,
    "let": 1,
    "people": 1,
    "average": 1,
    "entice": 1,
    "application": 15,
    "remote": 1,
    "ability": 1,
    "attract": 1,
    "nasty": 1,
    "create": 3,
    "spyphone": 1,
    "patch": 2,
    "away": 1,
    "official": 3,
    "finance": 1,
    "exploit": 7,
    "founder": 1,
    "elegant": 1,
    "performance": 1,
    "actual": 1,
    "weakness": 1,
    "mass": 1,
    "insecurely": 1,
    "continue": 2,
    "site": 2,
    "launch": 1,
    "attacker": 12,
    "physically": 1,
    "consumer": 1,
    "effort": 1,
    "flavour": 1,
    "unprotected": 1,
    "allocation": 1,
    "false": 1,
    "find": 4,
    "house": 2,
    "end": 2,
    "lack": 1,
    "forget": 1,
    "holy": 1,
    "hypothetical": 1,
    "region": 1,
    "flaw": 4,
    "fact": 1,
    "easy": 2,
    "favourite": 1,
    "believe": 1,
    "use": 5,
    "show": 3,
    "surveillance": 1,
    "easily": 4,
    "sell": 1,
    "receive": 1,
    "structure": 4,
    "safety": 1,
    "power": 1,
    "bad": 2,
    "enable": 1,
    "cut": 1,
    "instal": 2,
    "know": 5,
    "persistent": 1,
    "big": 2,
    "working": 1,
    "collect": 1,
    "presentation": 1,
    "service": 2,
    "monitor": 2,
    "lot": 1,
    "provide": 2,
    "leave": 1,
    "browser": 1,
    "penetration": 1,
    "address": 2,
    "face": 1,
    "swiftly": 1,
    "store": 4,
    "strategy": 1,
    "tweet": 1,
    "garden": 1,
    "deter": 1,
    "encourage": 1,
    "keylogger": 1,
    "feel": 1,
    "legitimate": 2,
    "authentication": 2,
    "targeted": 1,
    "download": 6,
    "base64": 1,
    "reasonable": 1,
    "apps": 2,
    "theorise": 1,
    "remove": 1,
    "heart": 1,
    "new": 2,
    "phishing": 2,
    "popularity": 1,
    "contain": 1,
    "right": 3,
    "infrastructure": 1,
    "potential": 2,
    "podcast": 1,
    "problem": 2,
    "share": 1,
    "eventually": 1,
    "smartphone": 3,
    "source": 1,
    "worker": 1,
    "refrain": 1,
    "free": 1,
    "mobile": 4,
    "permanently": 1,
    "ask": 1,
    "take": 1,
    "enterprise": 2,
    "improve": 1,
    "buyable": 1,
    "completely": 1,
    "variety": 1,
    "run": 2,
    "criminal": 1,
    "gain": 2,
    "machine": 2,
    "appear": 2,
    "virus": 1,
    "wall": 1,
    "tricky": 1,
    "outsider": 1,
    "information": 6,
    "outlet": 1,
    "previously": 1,
    "level": 1,
    "vendor": 1,
    "difficult": 1,
    "technique": 2,
    "piece": 3,
    "rearrange": 1,
    "threat": 2,
    "uncover": 1,
    "sandbox": 2,
    "hold": 1,
    "example": 1,
    "release": 1,
    "sound": 1,
    "forum": 1,
    "valid": 1,
    "design": 2,
    "late": 2,
    "hack": 1,
    "ios": 18,
    "intervention": 1,
    "executive": 1,
    "malware": 6,
    "facilitate": 1,
    "gather": 1,
    "hole": 1,
    "senior": 1,
    "lead": 1,
    "party": 1,
    "swipe": 1,
    "version": 1,
    "suspicious": 1,
    "medium": 1,
    "cover": 1,
    "precedent": 1,
    "like": 2,
    "nifty": 1,
    "known": 1,
    "essentially": 1,
    "attack": 9,
    "agency": 1,
    "click": 4,
    "sense": 1,
    "move": 1,
    "transmission": 1,
    "recording": 1,
    "goal": 1,
    "corruption": 1,
    "checking": 1,
    "base": 2,
    "advice": 1,
    "co": 1,
    "non": 1,
    "feature": 2,
    "control": 1,
    "require": 1,
    "start": 1,
    "passwords/username": 1,
    "target": 7,
    "particularly": 2,
    "paper": 1,
    "work": 5,
    "server": 2,
    "fast": 1,
    "extend": 1,
    "operating": 2,
    "theory": 1,
    "say": 4,
    "simple": 1,
    "zone": 3,
    "sight": 1,
    "owner": 3,
    "job": 1,
    "command": 1,
    "way": 9,
    "send": 7,
    "public": 3,
    "execute": 4,
    "developer": 4,
    "curve": 1,
    "host": 1,
    "wide": 1,
    "datum": 17,
    "able": 1,
    "aim": 1,
    "altogether": 1,
    "grab": 1,
    "allocate": 1,
    "device": 15,
    "invincible": 1,
    "switch": 4,
    "consultancy": 1,
    "bought": 1,
    "acquire": 3,
    "line": 1,
    "security": 7,
    "encoding": 1,
    "keep": 1,
    "produce": 1,
    "direct": 2,
    "vulnerable": 1,
    "pc": 1,
    "notable": 1,
    "method": 1,
    "page": 2,
    "nab": 1,
    "company": 1,
    "tin": 1,
    "respect": 1,
    "improper": 1,
    "carry": 1,
    "demonstrate": 2,
    "telecom": 1,
    "fake": 2,
    "operate": 2,
    "corrupt": 1,
    "firm": 3,
    "lie": 1,
    "investigate": 1,
    "potentially": 2,
    "researcher": 5,
    "insecure": 2,
    "document": 1,
    "token": 1,
    "mobility": 1,
    "emulation": 1,
    "chained": 1,
    "try": 1,
    "want": 3,
    "urge": 1,
    "protection": 2,
    "credential": 1,
    "business": 1,
    "software": 6,
    "alarming": 1,
    "network": 6,
    "tool": 1,
    "include": 2,
    "ahead": 1,
    "unencrypt": 1,
    "whopping": 1,
    "kernel": 3,
    "research": 1,
    "forgive": 1,
    "vector": 1,
    "specific": 1,
    "write": 2,
    "allocator": 1,
    "memory": 6,
    "myriad": 1,
    "hungry": 1,
    "load": 1,
    "clear": 1,
    "reveal": 1,
    "probe": 1,
    "avoid": 2,
    "untrusted": 1,
    "worrying": 1,
    "privilege": 3,
    "raw": 1,
    "mock": 1,
    "sensitive": 1,
    "technology": 3,
    "webex": 1,
    "analysis": 1,
    "remain": 1,
    "digital": 1,
    "go": 1,
    "pilfer": 1,
    "malicious": 10,
    "data": 3,
    "game": 1,
    "encode": 1,
    "employee": 1,
    "possible": 2,
    "system": 5,
    "certificate": 6,
    "divide": 1,
    "neat": 1,
    "internet": 2,
    "anti": 1,
    "skycure": 1,
    "calendar": 1,
    "website": 2,
    "break": 1,
    "smug": 1,
    "link": 3,
    "allow": 4,
    "hand": 1,
    "claim": 2,
    "vast": 1,
    "tremendous": 1,
    "code": 7,
    "lump": 1,
    "accept": 1,
    "approach": 1,
    "market": 1,
    "install": 1,
    "sneak": 1,
    "underground": 1,
    "sit": 2,
    "domain": 1,
    "root": 1,
    "touchscreen": 1,
    "cache": 1,
    "employer": 1,
    "validation": 2,
    "personal": 1,
    "hacker": 3,
    "testing": 1,
    "careful": 1,
    "geolocation": 1,
    "jailbroken": 3,
    "give": 2,
    "defend": 1,
    "jab": 1,
    "familiar": 1,
    "chief": 3,
    "size": 1,
    "sign": 2,
    "major": 2,
    "coup": 1,
    "distribute": 1
  },
  "title": "Feeling smug that your iPhone can't be hacked? Not so fast...",
  "core-words": {
    "invicible": 1,
    "continue": 1,
    "steal": 2,
    "site": 1,
    "jump": 1,
    "passwords/username": 1,
    "official": 1,
    "malware": 2,
    "level": 1,
    "potentially": 1,
    "reverse": 1,
    "agency": 1,
    "firm": 3,
    "user": 5,
    "base": 1,
    "app": 4,
    "rogue": 1,
    "uncover": 1,
    "find": 1,
    "mistake": 1,
    "hold": 1,
    "whilst": 1,
    "acquire": 1,
    "credential": 1,
    "unencrypt": 1,
    "holy": 1,
    "notable": 1,
    "know": 2,
    "online": 1,
    "hack": 1,
    "ios": 4,
    "valid": 1,
    "network": 1,
    "executive": 1,
    "easy": 1,
    "incorrectly": 1,
    "include": 1,
    "use": 3,
    "public": 1,
    "malicious": 4,
    "lack": 1,
    "easily": 1,
    "research": 1,
    "receive": 1,
    "vector": 1,
    "provide": 1,
    "researcher": 1,
    "employee": 1,
    "privilege": 1,
    "cut": 1,
    "sandbox": 1,
    "heavily": 1,
    "accord": 1,
    "attack": 2,
    "move": 1,
    "avoid": 1,
    "presentation": 1,
    "feature": 1,
    "security": 2,
    "gather": 1,
    "checking": 1,
    "rely": 1,
    "leave": 1,
    "hacker": 2,
    "come": 1,
    "webex": 1,
    "way": 1,
    "penetration": 1,
    "address": 1,
    "read": 1,
    "start": 1,
    "phone": 1,
    "store": 3,
    "surveillance": 1,
    "target": 2,
    "technology": 1,
    "encode": 1,
    "specific": 1,
    "bad": 1,
    "handy": 1,
    "certificate": 2,
    "garden": 1,
    "iphone": 1,
    "common": 1,
    "feel": 1,
    "fast": 1,
    "internet": 1,
    "far": 1,
    "attacker": 3,
    "say": 1,
    "vulnerability": 1,
    "download": 1,
    "smug": 1,
    "base64": 1,
    "allow": 1,
    "hand": 1,
    "hit": 2,
    "apps": 2,
    "get": 1,
    "want": 1,
    "vast": 1,
    "case": 1,
    "coverage": 1,
    "send": 1,
    "let": 1,
    "execute": 1,
    "developer": 2,
    "code": 2,
    "protection": 1,
    "host": 1,
    "wide": 1,
    "entice": 1,
    "right": 1,
    "application": 5,
    "targeted": 1,
    "problem": 2,
    "attract": 1,
    "device": 3,
    "nasty": 1,
    "switch": 1,
    "smartphone": 2,
    "cache": 1,
    "worker": 1,
    "improper": 1,
    "validation": 1,
    "mobile": 1,
    "permanently": 1,
    "officer": 1,
    "insecure": 2,
    "testing": 1,
    "kernel": 1,
    "produce": 1,
    "launch": 1,
    "datum": 7,
    "grail": 1,
    "website": 1,
    "consultancy": 1,
    "encoding": 1,
    "exploit": 3,
    "trivial": 1,
    "method": 1,
    "information": 1,
    "chief": 2,
    "heart": 1,
    "majority": 1,
    "wall": 1,
    "carry": 1,
    "demonstrate": 1
  },
  "class": null,
  "tags": [
    "technology/iphone",
    "technology/apple",
    "technology/hacking",
    "technology/smartphones",
    "technology/computing"
  ],
  "content": "iPhone owners would be forgiven for having a false sense of security when it comes to the safety of data on their phone. Apple has done a tremendous job of creating a locked-down operating system that keeps malicious software away from its elegant handsets and deters potential attackers. Android continues to be the most targeted mobile operating system. Cisco's 2014 Annual Security Report claimed that 99% of mobile malware spotted in 2013 was aimed at Google's smartphone operating system \u2013 the report was swiftly tweeted by Apple's Phil Schiller as his latest jab at Android. Yet there remain some alarming facts for iPhone owners to take on board. First, its iOS software is far from flaw-free. In a 2013 report, Symantec claimed that there were 387 documented security holes in iOS in 2012, compared to just 13 for Android. When Apple released its iOS 7 software in 2013, it patched a whopping 70 flaws. And while vulnerabilities do not always equate to threats, it's clear from this data that iOS is far from invincible. What's more, there are a myriad of ways outsiders can try to pilfer data from iOS. Given the popularity of Apple's devices, attackers will be hungry to exploit them. Target the apps If you've been reading the Guardian's coverage of online surveillance by agencies including the NSA and GCHQ, you'll already know that one way to gather data from smartphones is to exploit vulnerabilities in apps. A variety of techniques can be employed by attackers in this respect. One notable problem uncovered by an Israeli start-up, SkyCure, was the insecure use of what's known as the \"301 Moved Permanently\" HTTP feature found in many applications on iOS, which lets developers easily switch the Internet addresses apps use to acquire data. It's often used when services are switching domains. SkyCure found attackers sitting on the same network as a user of a vulnerable app could easily switch those Internet addresses with their own malicious site. Even when users left that network, as iOS cached the malicious URL, when they continued to use the application they would still hit that bad site, which could be used to carry out exploits on the user's phone. At least three of the biggest US media outlets had such a flaw in their consumer-facing applications, says Yair Amit, co-founder and chief technology officer of Skycure. \"You can persistently and remotely control how the application is working,\" he warns. \"It's possible because most applications are loading information or commands from their server to execute on the client with no indication of the actual source. I've been working with many pretty well-known papers as well as other big vendors on other applications, like finance and podcasts, and patches are going out.\" Amit is planning to detail some more \"neat techniques\" for exploiting iOS at the RSA Conference in San Francisco this month, but cannot reveal more as he works with Apple to mitigate the threat. Insecure data Developers, whether producing iOS applications for workers or for the wider public, often rely too heavily on the device to store data too. If done insecurely, this allows attackers sitting on the same network as an iPhone user, such as a public Wi-Fi network, to potentially scoop up information being sent to and from the app. \"It is easy to make mistakes such as storing user data (passwords/usernames) incorrectly on the device, in the vast majority of cases credentials get stored either unencrypted or have been encoded using methods such as base64 encoding (or others) and are rather trivial to reverse,\" says Andy Swift, mobile security researcher from penetration testing firm Hut3. \"This mistake extends to sending data too, if developers rely on the device too much it becomes quite easy to forget altogether about the transmission of the data. Such data can be easily extracted and may include authentication tokens, raw authentication data or personal data. At the end of the day if not investigated, the end user has no idea what data the application is accessing and sending to a server somewhere.\" Another common problem in iOS apps, according to Cesar Cerrudo, chief technology officer for security research and consultancy firm IOActive Labs, is improper or lack of validation of data received by the application. This allows attackers to send malicious data to the app and have malicious code executed on the user device to steal information. All of these attacks could easily be executed on public or unprotected Wi-Fi networks, so you should be especially careful when using such services, refraining from sharing sensitive data over them. And they should avoid any untrusted networks. Using stolen certificates Apple has been particularly good at defending iPhones and iPads from malware. Yet there are ways to game the system to get rogue apps on iOS devices. Stolen certificates can be particularly handy. Even though they can be tricky to acquire, some are bought and sold on underground forums, others nabbed during attacks on businesses. These certificates are designed to sign applications, providing validation they were created by legitimate parties. For iOS, they come in various flavours, the most common one being for developers who want to publish on the official App Store. But there are also certificates for signing in-house applications, where IT teams send out apps and updates via their own infrastructure, rather than using the App Store. If an attacker can get hold of a valid certificate, they can target specific employees by enticing them into downloading malicious applications, as Michael Shaulov, chief executive of San Francisco-based firm Lacoon Mobile Security demonstrates during a one-on-one presentation over WebEx. He shows me a mock phishing email, urging a user to download a security update. When the user clicks on the download link, they are asked by the device whether they want to install. If they click yes, as many would do if the email appeared to legitimately come from their employer, the malware downloads on to the iPhone. In the example Shaulov uses, a fake enterprise email client is downloaded. He uses that fake app to collect information such as calendar, geolocation and contact data, or even switch on recording without any user intervention. \"This is all done on a completely fresh iOS 7 non-jailbroken device. You can facilitate such an attack without much effort,\" he adds. \"A lot of enterprises are now ahead of the curve with their mobility and are distributing in-house applications in such a way that it becomes a very reasonable phishing target. People are familiar with this way that IT delivers a new application, so they just click that malicious link.\" Bypassing App Store protections Whilst using stolen certificates is handy for targeted hits where the hackers want to avoid all the code checking that the App Store provides, the holy grail for iOS attackers is getting malware into Apple's walled garden - the official App Store, which has only ever hosted one rogue app. Given Apple doesn't allow anti-virus to work on its mobile machines, acquiring masses of malware downloads from its official market would be a major coup for a digital criminal. There are precedents. Researchers from the Georgia Tech Information Security Center have previously shown off a way of sneaking a bad app into the store. They sent in what appeared to be a legitimate piece of software and Apple accepted it. But once the app was installed on a user device it would rearrange its code to enable more malicious features, such as stealing photos and sending emails. Others have created nifty pieces of iOS malware. Neal Hindocha, a researcher from security company Trustwave, is planning to demonstrate a keylogger at RSA Conference that can monitor everything on an iPhone, right down to the swipes of a touchscreen. It will only work on a jailbroken device, however, where security protections stopping applications having too much power are removed. Jailbreaking and jumping out of the sandbox Another potentially nasty attack vector can come from website attacks that launch a kernel-level exploit, cutting right to the heart of iOS and handing user privileges to a hacker. This is one of the most difficult ways to break iOS, especially when the attacker is doing the work remotely rather than having direct access to the device. Apple has covered off all known kernel vulnerabilities in the latest version of iOS, but researchers have theorised on possible future attacks. Tarjei Mandt, senior vulnerability researcher at Azimuth Security, has been probing the ways iOS allocates memory and believes he has found a potential weakness. It lies in what is known as the new \"zone page metadata structure\", which is designed to improve the performance of the operating system's zone allocator, used for organising memory by size, dividing memory into regions, or zones. A hypothetical attack would see the hacker trick this metadata structure, information from which is taken by the code doing the memory allocation, into writing remote code into the memory pages of the device. \"If you have a memory corruption vulnerability, the idea [for the attacker] is that you can target this structure to overwrite the information that it contains,\" he says. \"If you have the ability to corrupt that data structure\u2026 you'll essentially be able to gain an arbitrary right [a privilege allowing an attacker to write to the device], which is pretty much the end goal of any exploit.\" The attacker could direct a target to a website, where a browser vulnerability would be exploited to initiate attack code. The kernel flaw would then be used to jump out of the Apple sandbox, an emulation technology that runs code to see if it's malicious before executing it. In theory, this chained approach would eventually lead to malicious software being lumped on the iPhone. Another way of getting root access to a phone is to jailbreak it by physically grabbing it and using known tools like evasi0n, which requires the iPhone be connected to a PC by USB, to gain user privileges. Malware could then be installed for persistent attacks. Lacoon has data showing that iOS is the favourite target of those running spyphones, buyable software that does what it says on the tin, monitoring jailbroken devices. In an analysis of 650,000 users from a major telecoms partner, Lacoon found 57% of the 650 infected machines were based on iOS. If all this sounds worrying, there's one encouraging piece of advice: the best strategy for the average iPhone owner is quite simple: keep your device within your line of sight, and don't click on any suspicious links."
}