{
  "class": null,
  "words": {
    "realise": 1,
    "update": 2,
    "find": 3,
    "recognition": 1,
    "owner": 1,
    "video": 2,
    "decode": 1,
    "broadly": 1,
    "fact": 1,
    "vulnerablity": 1,
    "release": 1,
    "user": 1,
    "thing": 1,
    "store": 1,
    "near": 1,
    "software": 4,
    "customer": 1,
    "stand": 1,
    "bug": 2,
    "discover": 6,
    "listen": 1,
    "address": 1,
    "let": 2,
    "picture": 2,
    "downloadable": 1,
    "prevalent": 1,
    "detect": 1,
    "create": 1,
    "way": 2,
    "analyst": 1,
    "rely": 1,
    "disclose": 1,
    "lack": 1,
    "large": 1,
    "capture": 1,
    "keypad": 1,
    "base": 1,
    "app": 1,
    "modify": 1,
    "sure": 1,
    "photo": 1,
    "principal": 1,
    "knowledge": 1,
    "mount": 2,
    "camera": 1,
    "research": 1,
    "browse": 1,
    "appear": 1,
    "technology": 1,
    "run": 1,
    "choosing": 1,
    "existence": 2,
    "researcher": 1,
    "play": 1,
    "need": 1,
    "bluetooth": 1,
    "experimentation": 1,
    "signature": 1,
    "unexpected": 1,
    "mean": 1,
    "master": 1,
    "cryptographic": 1,
    "potentially": 1,
    "consequence": 1,
    "allow": 1,
    "suggest": 1,
    "standard": 2,
    "analysis": 1,
    "measure": 1,
    "set": 1,
    "especially": 1,
    "company": 1,
    "input": 1,
    "exploit": 1,
    "use": 2,
    "widespread": 1,
    "vulnerability": 5,
    "parent": 1,
    "ask": 1,
    "occupy": 1,
    "page": 1,
    "order": 1,
    "obvious": 1,
    "want": 1,
    "direct": 1,
    "people": 2,
    "report": 2,
    "middleman": 1,
    "start": 1,
    "attack": 1,
    "system": 4,
    "hand": 1,
    "feedback": 1,
    "challenge": 1,
    "fix": 2,
    "network": 2,
    "different": 1,
    "look": 2,
    "statement": 1,
    "work": 2,
    "capable": 1,
    "datum": 3,
    "mobile": 1,
    "like": 1,
    "confirm": 2,
    "wi": 2,
    "tell": 3,
    "prevent": 1,
    "subset": 1,
    "access": 1,
    "frame": 1,
    "connection": 2,
    "affect": 1,
    "absolutely": 1,
    "old": 1,
    "retain": 1,
    "limited": 1,
    "say": 8,
    "fi": 2,
    "try": 1,
    "seed": 1,
    "predictable": 1,
    "piece": 1,
    "send": 2,
    "head": 2,
    "hardware": 1,
    "scan": 1,
    "special": 1,
    "come": 1,
    "device": 5,
    "web": 2,
    "hacker": 2,
    "control": 2,
    "site": 1,
    "malicious": 1,
    "yield": 1,
    "internet": 2,
    "impressive": 1,
    "sort": 1,
    "strip": 1,
    "name": 1,
    "code": 8,
    "take": 2,
    "google": 1,
    "key": 1,
    "startup": 1,
    "hack": 4,
    "particularly": 1,
    "connected": 1,
    "connect": 4,
    "new": 1,
    "launch": 1,
    "smartphone": 3,
    "wearable": 1,
    "consumer": 2,
    "security": 6,
    "point": 2,
    "roll": 1,
    "flaw": 12,
    "printout": 1,
    "turn": 1,
    "encryption": 1,
    "deliver": 1,
    "upload": 1,
    "unique": 1,
    "image": 2,
    "forward": 1,
    "inspirational": 1,
    "think": 2,
    "know": 1,
    "blogg": 1
  },
  "core-words": {
    "update": 2,
    "find": 1,
    "owner": 1,
    "video": 1,
    "broadly": 1,
    "fact": 1,
    "user": 1,
    "near": 1,
    "google": 1,
    "stand": 1,
    "discover": 5,
    "listen": 1,
    "address": 1,
    "recognition": 1,
    "picture": 1,
    "create": 1,
    "sort": 1,
    "analyst": 1,
    "rely": 1,
    "disclose": 1,
    "lack": 1,
    "capture": 1,
    "keypad": 1,
    "think": 2,
    "photo": 1,
    "piece": 1,
    "principal": 1,
    "knowledge": 1,
    "mount": 2,
    "camera": 1,
    "technology": 1,
    "new": 1,
    "choosing": 1,
    "researcher": 1,
    "bluetooth": 1,
    "experimentation": 1,
    "image": 2,
    "allow": 1,
    "set": 1,
    "especially": 1,
    "company": 1,
    "input": 1,
    "use": 1,
    "widespread": 1,
    "vulnerability": 2,
    "ask": 1,
    "occupy": 1,
    "order": 1,
    "want": 1,
    "security": 4,
    "people": 1,
    "report": 1,
    "software": 2,
    "start": 1,
    "system": 3,
    "hand": 1,
    "feedback": 1,
    "challenge": 1,
    "fix": 1,
    "network": 1,
    "statement": 1,
    "work": 1,
    "standard": 1,
    "mobile": 1,
    "like": 1,
    "wi": 1,
    "tell": 3,
    "launch": 1,
    "access": 1,
    "frame": 1,
    "connection": 1,
    "inspirational": 1,
    "say": 4,
    "fi": 1,
    "research": 1,
    "send": 2,
    "head": 2,
    "hardware": 1,
    "datum": 3,
    "scan": 1,
    "special": 1,
    "come": 1,
    "device": 4,
    "web": 1,
    "hacker": 1,
    "control": 2,
    "malicious": 1,
    "yield": 1,
    "internet": 1,
    "code": 6,
    "take": 1,
    "hack": 3,
    "connected": 1,
    "connect": 1,
    "let": 1,
    "smartphone": 1,
    "wearable": 1,
    "point": 1,
    "flaw": 9,
    "printout": 1,
    "way": 1
  },
  "title": "Google Glass hacked with malicious QR code to yield its pictures and video",
  "id": "technology/2013/jul/17/google-glass-hacked-vulnerability-image",
  "tags": [
    "technology/google-glass",
    "technology/google",
    "technology/malware",
    "technology/data-computer-security",
    "technology/hacking",
    "technology/technology",
    "technology/wearable-technology"
  ],
  "content": "Researchers at mobile security company Lookout discovered a security flaw in Google Glass which allowed them to capture data being sent from the head-mounted device to the web without the user's knowledge. The flaw used the fact that the head-mounted Glass camera scans any photo it takes for a QR code in order to set up Wi-Fi or Bluetooth connections to a smartphone for internet access. Whenever the Glass software detects a QR code, it decodes it to see if it names a Wi-Fi network to connect to. It will do this even if the code does not occupy the whole of the frame - so a hacker could get a Glass owner to hack their own device just by standing near a printout of special QR code. \"We created a QR code that told Glass to connect to a Wi-Fi network of my choosing and started sending data to that,\" Marc Rogers, principal security analyst at Lookout, told the Guardian. \"We could become the middleman, and if we needed to strip out the encryption on the connection. Then we could see the pictures or video that it's uploading. We could also direct it to a site on the web which exploits a known vulnerability in Android 4.0.4\" - used by Glass - \"which hacked Glass at it browsed the page.\" Rogers says that he discovered the flaw - which was disclosed to Google, and has since been fixed by a software update - on 17 May after about a week of experimentation. \"I tried to work out where it was different from its parent smartphone,\" he said. At Lookout, Rogers has blogged about the attack, pointing out that as the \"internet of things\" - connected devices - becomes larger and more prevalent, unexpected vulnerabilities may appear which would not be predictable through standard analysis. Lookout has also confirmed the existence of a serious vulnerability in Android potentially affecting 99% of smartphones running the system, which was reported by Bluebox Security, a security startup based in San Francisco. Bluebox said that there is a \"master key\" which would let hackers modify the code of a downloadable app to turn it into a Trojan while retaining its old cryptographic signature on the Play store. Though Google has taken measures to prevent that, Lookout has confirmed the flaw's existence and is rolling out a fix for customers using it software. The Google Glass vulnerability meanwhile points to a new challenge as \"connected devices\" become more widespread - especially if, like Glass, they lack standard input systems such as keypads and so must rely on image recognition for control. \"Both the vulnerablity, and the way it was delivered, are unique to Glass - a consequence of it being connected,\" Rogers said. \"I don't think anyone's hacked a device with an image before.\" Google updated the flaw two weeks after being told about it, Rogers said. Asked whether he thought there would be other flaws discovered in Glass, he said: \"Every piece of software and hardware has flaws. What's particularly impressive is that Google realised there's a limited subset of people capable of finding these bugs, and has seeded Glass to them before releasing it to consumers.\" That means that the most obvious security flaws should be discovered before consumers use them, he suggested. But he said that he was \"absolutely\" sure more flaws would be found: \"I'm looking forward to looking for more bugs.\" He wouldn't say whether Lookout had found more security flaws in the two months since reporting the QR code flaw to Google. Google said in a statement: \"We want get Glass into the hands of all sorts of people, listen to their feedback, see the inspirational ways they use the technology, and discover vulnerabilities that we can research and work to address before we launch Glass more broadly.\"",
  "lead": "Lookout Security discovers flaw in early software on Google head-mounted system which lets it take control of data coming from wearable system. By Charles Arthur"
}