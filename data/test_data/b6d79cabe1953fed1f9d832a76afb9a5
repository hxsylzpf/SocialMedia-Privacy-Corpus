{
  "lead": "Search tool on programming site turns up SSH keys, which could allow attackers to hack sites or alter programs silently. By Danny Bradbury",
  "id": "technology/2013/jan/25/github-search-security-warning",
  "words": {
    "generate": 1,
    "information": 1,
    "mean": 3,
    "operator": 1,
    "leave": 1,
    "code": 9,
    "hold": 3,
    "appeal": 1,
    "hosting": 1,
    "user": 10,
    "yes": 1,
    "piece": 1,
    "huge": 1,
    "monitor": 1,
    "case": 1,
    "contain": 1,
    "search": 17,
    "warn": 1,
    "team": 1,
    "go": 3,
    "repository": 10,
    "file": 11,
    "design": 1,
    "caution": 1,
    "online": 3,
    "hack": 1,
    "exist": 1,
    "turn": 1,
    "upgrade": 2,
    "effect": 1,
    "one": 1,
    "show": 1,
    "alert": 1,
    "connect": 1,
    "ssh": 3,
    "let": 2,
    "probably": 2,
    "equivalent": 1,
    "blogpost": 1,
    "visitor": 1,
    "risk": 2,
    "push": 1,
    "danger": 1,
    "version": 2,
    "update": 1,
    "account": 3,
    "deliberately": 1,
    "mistake": 1,
    "machine": 1,
    "like": 3,
    "barrier": 1,
    "trouble": 1,
    "known": 1,
    "coding": 1,
    "onus": 1,
    "collaborator": 1,
    "compromise": 4,
    "field": 1,
    "bastard": 1,
    "block": 1,
    "detail": 2,
    "accessible": 1,
    "vulnerability": 1,
    "simply": 1,
    "engine": 2,
    "publish": 4,
    "location": 1,
    "home": 1,
    "understand": 1,
    "different": 2,
    "email": 1,
    "idea": 1,
    "unauthorised": 1,
    "slowly": 1,
    "source": 10,
    "right": 1,
    "person": 1,
    "start": 1,
    "folk": 1,
    "lot": 1,
    "inexperience": 1,
    "popular": 3,
    "target": 2,
    "main": 1,
    "domain": 1,
    "anymore": 1,
    "provide": 1,
    "particularly": 1,
    "add": 1,
    "program": 3,
    "trojanis": 1,
    "fundamental": 3,
    "regular": 1,
    "concern": 1,
    "cluster": 1,
    "call": 2,
    "modify": 1,
    "say": 12,
    "official": 2,
    "highlight": 1,
    "jeez": 1,
    "sniff": 1,
    "make": 2,
    "access": 2,
    "stop": 2,
    "follow": 1,
    "founder": 1,
    "public": 8,
    "people": 5,
    "issue": 1,
    "unlimited": 1,
    "attention": 1,
    "enterprising": 1,
    "begin": 3,
    "spokespeople": 1,
    "respond": 1,
    "password": 4,
    "good": 1,
    "create": 1,
    "trojan": 1,
    "arise": 1,
    "writing": 1,
    "security": 8,
    "unlikely": 1,
    "server": 1,
    "keep": 1,
    "commit": 1,
    "vulnerable": 1,
    "evaluate": 1,
    "seriously": 1,
    "tell": 1,
    "check": 1,
    "repo": 1,
    "indexing": 1,
    "time": 2,
    "charge": 1,
    "archive": 1,
    "run": 1,
    "encrypt": 1,
    "actually": 1,
    "continue": 1,
    "easy": 1,
    "site": 13,
    "launch": 1,
    "attacker": 3,
    "role": 1,
    "change": 2,
    "potentially": 1,
    "researcher": 5,
    "git": 1,
    "longer": 1,
    "twitter": 2,
    "giant": 1,
    "find": 5,
    "tan": 1,
    "programmer": 1,
    "sort": 1,
    "backdoor": 1,
    "credential": 3,
    "folder": 3,
    "flaw": 2,
    "status": 1,
    "@github": 1,
    "software": 7,
    "key": 15,
    "event": 1,
    "experience": 1,
    "function": 2,
    "tweet": 2,
    "tool": 4,
    "organiser": 1,
    "include": 4,
    "purge": 1,
    "idiot": 2,
    "use": 6,
    "contributor": 1,
    "oh": 1,
    "host": 2,
    "concept": 2,
    "select": 1,
    "expose": 2,
    "significant": 2,
    "happy": 1,
    "project": 4,
    "inadvertently": 2,
    "private": 13,
    "~/.gnupg/": 1,
    "sudden": 1,
    "cause": 2,
    "reveal": 2,
    "post": 6,
    "know": 1,
    "conference": 1,
    "result": 1,
    "explore": 1,
    "return": 1,
    "silently": 1,
    "unwittingly": 1,
    "service": 4,
    "worrying": 1,
    "downplay": 1,
    "available": 2,
    "acknowledge": 2,
    "blacklist": 1,
    "sensitive": 4,
    "screw": 1,
    "technology": 1,
    "great": 1,
    "browser": 1,
    "long": 2,
    "remain": 1,
    "web": 3,
    "broad": 1,
    "store": 4,
    "recover": 1,
    "happen": 1,
    "open": 3,
    "system": 1,
    "bug": 1,
    "searchable": 2,
    "number": 3,
    "internet": 1,
    "think": 2,
    "point": 1,
    "responsible": 1,
    "website": 2,
    "determined": 1,
    "encryption": 2,
    "gain": 2,
    "offer": 2,
    "culpable": 1,
    "claim": 1,
    "developer": 12,
    "get": 2,
    "copy": 3,
    "individual": 1,
    "work": 7,
    "new": 1,
    "github": 8,
    "progress": 1,
    "enormous": 1,
    "authentication": 1,
    "computer": 2,
    "unavailable": 1,
    "certain": 1,
    "option": 1,
    "alter": 1,
    "coder": 1,
    "problem": 8,
    "share": 1,
    "ethos": 1,
    "type": 1,
    "naming": 1,
    "maintainer": 2,
    "page": 1,
    "facility": 1,
    "free": 1,
    "hacker": 2,
    "assume": 1,
    "instead": 1,
    "production": 1,
    "communication": 1,
    "large": 1,
    "put": 1,
    "vacuum": 1,
    "focus": 1,
    "link": 2,
    "warning": 1,
    "~/.ssh/": 1,
    "directory": 1,
    "allow": 1,
    "sign": 1,
    "major": 3,
    "list": 2,
    "thing": 2,
    "introduce": 1,
    "advanced": 1
  },
  "title": "GitHub users warned over security risk",
  "core-words": {
    "site": 6,
    "launch": 1,
    "attacker": 1,
    "change": 1,
    "potentially": 1,
    "researcher": 1,
    "appeal": 1,
    "hosting": 1,
    "user": 5,
    "piece": 1,
    "exist": 1,
    "unlimited": 1,
    "giant": 1,
    "search": 9,
    "warn": 1,
    "make": 2,
    "credential": 2,
    "file": 6,
    "folder": 2,
    "concept": 1,
    "online": 2,
    "hack": 1,
    "software": 2,
    "key": 6,
    "turn": 1,
    "experience": 1,
    "function": 1,
    "tweet": 1,
    "tool": 3,
    "include": 2,
    "ssh": 2,
    "use": 3,
    "public": 5,
    "equivalent": 1,
    "risk": 1,
    "deliberately": 1,
    "computer": 2,
    "collaborator": 1,
    "happy": 1,
    "inadvertently": 2,
    "private": 6,
    "alert": 1,
    "machine": 1,
    "known": 1,
    "reveal": 1,
    "open": 2,
    "caution": 1,
    "compromise": 1,
    "silently": 1,
    "unwittingly": 1,
    "service": 2,
    "publish": 1,
    "available": 1,
    "home": 1,
    "sensitive": 2,
    "screw": 1,
    "leave": 1,
    "indexing": 1,
    "tell": 1,
    "long": 1,
    "offer": 1,
    "web": 2,
    "start": 1,
    "store": 4,
    "popular": 1,
    "particularly": 1,
    "post": 6,
    "effect": 1,
    "program": 2,
    "searchable": 1,
    "number": 1,
    "regular": 1,
    "concern": 1,
    "generate": 1,
    "begin": 2,
    "time": 1,
    "say": 1,
    "find": 1,
    "determined": 1,
    "link": 2,
    "allow": 1,
    "code": 2,
    "copy": 2,
    "stop": 1,
    "work": 1,
    "new": 1,
    "github": 6,
    "developer": 4,
    "host": 1,
    "accessible": 1,
    "contain": 1,
    "version": 1,
    "option": 1,
    "alter": 1,
    "coder": 1,
    "share": 1,
    "respond": 1,
    "access": 1,
    "people": 3,
    "source": 4,
    "repository": 4,
    "arise": 1,
    "hacker": 1,
    "security": 2,
    "issue": 1,
    "password": 1,
    "expose": 2,
    "sort": 1,
    "commit": 1,
    "website": 1,
    "maintainer": 1,
    "operator": 1,
    "browser": 1,
    "encryption": 1,
    "repo": 1,
    "directory": 1,
    "list": 1,
    "run": 1,
    "advanced": 1,
    "free": 1
  },
  "class": null,
  "tags": [
    "technology/software",
    "technology/programming",
    "technology/hacking",
    "technology/data-computer-security",
    "technology/technology",
    "technology/internet"
  ],
  "content": "Coders who use the popular code-sharing site GitHub were put on alert on Thursday after it was found that many have been inadvertently posting private files, including their private encryption keys, there. The concern arose because the search function on the site made those private credentials searchable, potentially compromising their use of online services all over the web \u2013 in effect publishing the equivalent of their passwords for all sorts of sites, and making them accessible to any browser. Overnight, GitHub's search function stopped working, though the site didn't acknowledge the cause. It simply said on its status page that \"Search remains unavailable. The cluster is recovering slowly and we continue to monitor its progress. We'll provide further updates as they become available.\" GitHub is a source code repository which lets developers work on programs together as a team, even when they are in different locations. Each repository on the site is a public folder designed to hold the software code that a developer is working on. The public folders are copies of private folders stored on the developers' own computers, so each developer can work on their own version of a piece of source code, and only commit changes to the public repository once happy with them. An individual in charge of a software project, called a maintainer, can then evaluate the versions of the same software held in different repositories, and select the best ones to become part of the main source code. Launched in 2008, GitHub appeals particularly to open-source software developers: it offers a free hosting option for open-source public repositories with unlimited numbers of public collaborators. In keeping with its open-source ethos, GitHub offers a search tool. Visitors can use its search facility to search for repositories and source code. The problem is that developers were putting private files into their repositories, which were then being copied into public repositories and made searchable. On Thursday, software developers on Twitter started posting web links to searches for sensitive files using GitHub's own search tool. These included private \"keys\" for SSH, a popular encryption and authentication technology. SSH keys are often used instead of passwords to gain access to online services. Computers running Unix (including Linux and Macintosh machines) store a user's SSH keys for regular use, and also store a \"known hosts\" file, which contains a list of the online services that they can access with the keys. Publishing these keys and files would be like publishing a list of your passwords to popular web sites for everyone to use. But the tool that generates SSH keys stores them in a user's home directory \u2013 and researchers said that many users were inadvertently copying these into their GitHub repositories along with other files, making them available in a public search on the Github site. \"One thing that's troubling about this is that these folks have let hosts they're connecting to be compromised, which probably means that you can compromise their own account,\" said Dragos Riui, a Canadian security researcher and founder of the annual CansecWest security conference, which will be held in Vancouver in March. \"That means that you can trojan up their projects, too. You could modify the source, and put a backdoor in it so that you could make the users of that source code project also vulnerable\". But because the attacker would have used the official programmer's keys, there would be no sign that an unauthorised change had been made. Other types of sensitive keys were also in danger, including private keys created for encrypting email and other communications using services like GNUPG. After people began posting links to searches on Twitter, others began to caution them: \"People posting github repo security screw-ups: *please* tell the maintainer and give them time to respond before posting here,\" tweeted one. \"It would be responsible of @github I think to blacklist some well-known private files like ~/.ssh/ and ~/.gnupg/,\" said another. Emerson Tan, an organiser at security vulnerability information site PacketStorm Security, pointed to developer inexperience as a key contributor to the problem. \"The risk of trojanised software isn't huge; what is more worrying is that so many of the developers don't get fundamental security concepts,\" he said. \"Just because you can code doesn't mean you understand security fundamentals. There is no barrier to coding.\" But who is culpable? The users publishing their private keys by mistake, or the sites who reveal such details in search engines? Dan Kaminsky, a researcher who found a fundamental bug in the internet's domain naming system several years ago, said that it's the users' problem. \"I don't think anyone's going to say that Git should not add a warning,\" he said. \"But that's not the role of the archive, to be sniffing around and blocking things.\" But when it happens to people in large numbers, it becomes a broader problem, said one Twitter user who works in the security field. \"When one person pushes their private key to GitHub, it's an idiot problem. When a hundred people do, it's not about idiot users anymore,\" the researcher said. Github co-founder Thomas Preston-Werner did not return the Guardian's calls. Neither his Twitter account nor GitHub's official account acknowledged the flaw at the time of writing. However, several searches that had shown private files earlier in the day no longer worked. This wouldn't stop a determined hacker, though: Google searches for the private files using advanced search operators still revealed private keys unwittingly posted by GitHub users as of 5am GMT, Friday. Kaminsky downplayed the event. \"If some of those projects are actually significant, then yes, you've got problems. But GitHub's enormous,\" he said. \"An attacker can target a certain number of developers that use Github. Do any of those developers work on something that is significant?\" One security researcher, Veracode's Melissa Elliott, claimed on Twitter to have found a target. \"Oh jeez just found an ssh password to a production server of a major, MAJOR website in China on Github,\" she tweeted on Thursday. GitHub isn't the only source repository to experience this issue, and it isn't a new concept. \"Googledorks\" \u2013 people who leave sensitive files and credentials exposed to indexing by the search giant \u2013 have long existed, and there are websites that deliberately expose them. The sudden focus on the problem followed a GitHub blogpost on Tuesday, in which spokespeople highlighted major upgrades to the site's search engine. \"Finding great code on GitHub just got a whole lot easier,\" it said. It is unlikely that the search upgrade introduced the problem, but it may have caused hackers to begin exploring the site in more detail. Now that this flaw has gained public attention, it will put the onus on developers to check and purge their sensitive files \u2013 and their software. \"We've no idea how long this has been going on,\" said PacketStorm's Tan. \"Some enterprising bastard has probably vacuumed up all the results and is going through it right now. Seriously, that is what you have to assume in the case of a credential compromise.\""
}