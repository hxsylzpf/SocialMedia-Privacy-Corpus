{
  "content": "As yet another former dot.com darling crashes and burns into cyber-oblivion, many must be experiencing a certain guilty Schadenfreude. Just as people had suspected, it seems the multibillion dollar new economy behemoths were as full of nothing as the zeros in their improbable valuations. But to confuse the frothy, headline-grabbing excitement of e-business and its egregious if entertaining cast of characters with the real achievement of the internet would be a tragic mistake. For the rise of the net as an open, universal communications medium has created another kind of wealth that has nothing to do with share options and initial public offerings (IPOs). In contrast to the hype and self-promotion of the e-commerce sector, thousands of selfless individuals have been quietly working away, steadily putting together the internet's best-kept secret and greatest gift: free software. Some prefer to call it \"open source\", but all those involved agree that anyone should be able to take these programs, copy them, use them, and modify them in any way, without having to pay a penny. All that is asked in return is that anything built on the work of others must also be freely available and able to be modified. If this sounds quaintly idealistic but hopelessly irrelevant in the early 21st century, consider the fact that this free software not only made the net possible in the first place, but keeps it running to this day. The Bind program, software that ensures that the billions of pieces of data routed over the internet's wiring every second reach their correct destination, was written nearly 20 years ago, and given away. Sendmail, created by Eric Allman around the same time, is responsible for delivering over three-quarters of all email sent across the internet. It has always been freely available, as has Apache, a program that runs nearly two-thirds of the web's 25 million public sites. And it is not just the internet that is built on free software: e-commerce itself would be unthinkable without it. For example, two of the top internet business sites, Amazon.com and Yahoo, depend for their rich user experience on a programming language called Perl. Like the others, Perl was given away by its creator, Larry Wall, from the moment it existed. Free software has a deeply symbiotic relationship with the internet: it gave rise to it but also depends critically on it. Behind its creation lies no army of programmers in cubicles, as in conventional software companies, but a loose, net-based confederation of self-styled hackers - not to be confused with the malevolent \"crackers\", who break into computer systems. This novel way of crafting programs has little in common with the traditional, hierarchical approach based on centralised teams working in a directed way. Instead, free software builds on the fact that its underlying lines of programming - the source code - are always freely available for all to inspect and improve. As a result, anyone can contribute improvements to any part: all that matters is the quality of the code. This Darwinian dynamic allows free software to progress in a uniquely efficient way. The fact that nobody gets paid to work on the code turns out to be an advantage. Since hackers tend to work on areas they are passionate about, they generally produce better code than unmotivated software grunts ordered to work on a product feature they may have little sympathy for. Moreover, the free software approach scales: it can tackle ever-bigger and more complex projects without the managerial overhead that eventually brings conventional software production to its knees. The ability to focus on code quality, and the lack of corporate agendas that so often override engineering considerations elsewhere, means that free software possesses a reliability that is second to none. One reason that few people are aware there are programs running the internet is that they never crash in any significant way: the free software underlying the internet is reliable to the point of invisibility. This reliability, combined with zero cost, poses a serious challenge to commercial outfits trying to sell their often bug-ridden programs. No one is more affected by this dichotomy than Microsoft, the most successful company ever built on the traditional software model. Microsoft's flagship product, Windows 2000, not only has a direct competitor but a serious rival in GNU/Linux, a free clone of the commercial Unix operating system (see below, left). Earlier this month, Steve Ballmer, Microsoft's generally upbeat chief executive officer, publicly acknowledged this for the first time: \"I'd put the Linux phenomenon really as threat number one,\" he said. The motives for developing free software vary enormously. Some, like Richard Stallman, who started the GNU project which forms the framework for GNU/Linux and who drew up what amounts to a constitution for the free software world (see above, right), are driven by lofty ideals. For them, writing software for anyone to use and modify is about liberty - one reason why this wing prefers the label \"free software\" to \"open source\". Larry Wall, the creator of Perl, sees a religious dimension. Originally trained as a linguist, Wall had intended to become a Christian missionary in remote parts of the world before food allergies made that impractical. Instead, he started writing software and giving it away, in part so that others might have a similar opportunity for generosity by passing on their own improvements to his work - an effect that Wall has no qualms about describing as \"theological\". Many other hackers believe the sharing and sense of community engendered among users of their programs is a crucial facet. Hackers also seem to agree on one other key factor that drives their work. Within their world, the highest praise for code is that it is \"cool\", that it possesses a kind of hacker beauty. One of the free software patriarchs, Donald Knuth, has spent the past 40 years of his life on a monumental series of books called simply The Art of Computer Programming. More recently, the colourful open-source spokesperson Eric Raymond, a neo-pagan with a black belt in Tae Kwon Do, is working on The Art of Unix Programming. This passion for cool code, for art and beauty, combined with the strong ethical component of many hackers, helps explain why free soft ware is starting to outpace proprietary rivals. For unlike commercial software vendors and their dot.com brethren, which at most can promise often evanescent material rewards, the free software projects offer something much more enduring and valuable on a human level, if more intangible. Tapping into the best that is in people, it calls forth the best. As such, it stands as a crucial corrective to any cynicism about the net's power and potential. \u0095 The Rebel Code: Linux and the Open Source Revolution, by Glyn Moody, is published today by Penguin. Readers can order a copy for the special price of \u00a39.99 by calling our Guardian book ordering service on 0800 3166 102. To read the first three chapters for free visit www.penguin.co.uk. GNU/Linux - how it all began While the free software that lies behind the internet remains something of an insider secret, one open source project, GNU/Linux, is breaking into the mainstream. In part this is down to the charisma of the young Finn Linus Torvalds, who leads the project that bears his name. The story of Linux - strictly speaking, this refers only to the kernel, the very heart of the operating system - is emblematic of the free software world. In 1991, when Torvalds was 21, versions of Unix, the operating system of preference for hackers, were expensive and hard to come by. While he was looking around for an alternative, Torvalds realised that some code he had been hacking on in his Helsinki bedroom was tantalisingly close to a key element of Unix. Torvalds decided not only to extend his ambitions for the code, but to post it online for others to download freely. This apparently trivial move allowed the nascent Linux (not its original name: Torvalds had intended to call it \"Freax\") to enlist the support of first dozens, and later thousands, of hackers worldwide eager for the chance to contribute to just such a \"cool\" project. Linux arrived at the right moment. In 1991, PCs were powerful enough to run Unix and yet cheap enough for even hackers to afford them; the internet was just taking off, allowing global collaboration; and the framework for a complete Unix clone had already been put in place over the preceding seven years by Richard Stallman, perhaps the greatest hacker of them all. Stallman's GNU project - a typical hacker name that stands recursively for GNU's Not Unix - lacked only a kernel, which Linux was able to provide. The resulting GNU/Linux operating system may have arisen in an entirely contingent way, but it has progressed to the point that last year IBM announced it would be offering it on all of its hardware - from the simplest PC to the mightiest mainframe. Copyleft, not copy right Giving away software is not without its pitfalls. If users are granted total freedom, they can sell it as a proprietary package with no copying allowed - and negate one of the key points of free software. To avoid this situation, Richard Stallman devised the GNU General Public Licence (GPL). Although drawing on copyright for its enforcement, this \"copyleft\", as it is often known, takes quite a different approach from traditional software licensing schemes which typically seek to limit the rights of a user. The GNU GPL, however, guarantees a user's rights. Software released under the GPL must be freely available (though it can be sold), and users must have the right to modify the underlying source code. In return for these rights, the licence imposes a duty: to pass on exactly the same rights to others. The GNU GPL is not the only licence employed by free software but it is by far the most important, and enshrines its central principles. Bruce Perens, one of the key players in the open source world, and an expert on software licensing matters, has no hesitation in declaring the GNU GPL \"one of the revolutionary documents of our century.\"",
  "title": "Giving it all away",
  "lead": "The internet. It's all about profits and who can make the most money. Isn't it?  Glyn Moody looks at the Linux phenomenon and the hackers who build the superhighway, for nothing",
  "tags": [
    "technology/hacking",
    "technology/cybercrime",
    "technology/internet",
    "technology/technology",
    "technology/linux",
    "technology/opensource",
    "technology/software",
    "technology/data-computer-security"
  ],
  "core-words": null,
  "id": "technology/2001/jan/25/hacking.security",
  "class": null,
  "words": null
}